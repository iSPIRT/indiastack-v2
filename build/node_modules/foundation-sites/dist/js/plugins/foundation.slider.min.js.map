{"version":3,"sources":["webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/universalModuleDefinition","webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/bootstrap","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.core\"],\"amd\":\"./foundation.core\",\"commonjs\":\"./foundation.core\",\"commonjs2\":\"./foundation.core\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.keyboard\"],\"amd\":\"./foundation.util.keyboard\",\"commonjs\":\"./foundation.util.keyboard\",\"commonjs2\":\"./foundation.util.keyboard\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.motion\"],\"amd\":\"./foundation.util.motion\",\"commonjs\":\"./foundation.util.motion\",\"commonjs2\":\"./foundation.util.motion\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.touch\"],\"amd\":\"./foundation.util.touch\",\"commonjs\":\"./foundation.util.touch\",\"commonjs2\":\"./foundation.util.touch\"}","webpack://__FOUNDATION_EXTERNAL__.[name]/js/entries/plugins/foundation.slider.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.slider.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.util.triggers.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__foundation_core__","__WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__","__WEBPACK_EXTERNAL_MODULE__foundation_util_motion__","__WEBPACK_EXTERNAL_MODULE__foundation_util_touch__","__WEBPACK_EXTERNAL_MODULE_jquery__","installedModules","__webpack_require__","m","r","__webpack_exports__","_foundation_core__WEBPACK_IMPORTED_MODULE_0__","d","_foundation_slider__WEBPACK_IMPORTED_MODULE_1__","Foundation","plugin","Slider","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","_foundation_util_keyboard__WEBPACK_IMPORTED_MODULE_1__","_foundation_util_motion__WEBPACK_IMPORTED_MODULE_2__","_foundation_core_utils__WEBPACK_IMPORTED_MODULE_3__","_foundation_util_touch__WEBPACK_IMPORTED_MODULE_4__","_foundation_util_triggers__WEBPACK_IMPORTED_MODULE_5__","element","options","this","$element","$","extend","defaults","data","className","Touch","init","Triggers","_init","Keyboard","register","ltr","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","ARROW_LEFT","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","HOME","END","rtl","inputs","find","handles","$handle","eq","$input","length","concat","attr","$fill","css","vertical","disabled","hasClass","disabledClass","addClass","add","binding","_setInitAttr","doubleSided","$handle2","$input2","setHandles","_events","_this2","_setHandlePos","val","value","pctOfBar","percent","start","end","positionValueFunction","_logTransform","_powTransform","toFixed","location","key","parseFloat","isDbl","$hndl","h1Val","h2Val","step","_this","handleDim","elemDim","hOrW","vert","_pctOfBar","getBoundingClientRect","pxToMove","movement","_setValues","decimal","handlePct","dim","cb","style","lOrT","handlePos","initialStart","Move","moveTime","Object","isNaN","clearTimeout","timeout","setTimeout","idx","initVal","initialEnd","id","max","min","role","aria-controls","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","index","e","preventDefault","halfOfHandle","barDim","windowScroll","offset","param","eventOffset","eventFromBar","barXY","elemOffset","_value","offsetPct","_adjustValue","firstHndlPos","absPosition","direction","left","prev_val","next_val","_eventsForHandle","handleChangeEvent","curHandle","clickSelect","keyCode","call","on","target","is","_handleEvent","currentTarget","$body","removeClass","off","newValue","decrease","increase","handleKey","oldValue","Math","abs","baseLog","dir","clickPos","log","position","base","_foundation_core_utils__WEBPACK_IMPORTED_MODULE_1__","_typeof","obj","Symbol","iterator","constructor","prototype","triggers","el","type","MutationObserver","prefixes","i","Initializers","Basic","Listeners","debounce","trigger","listener","timer","addResizeListener","$nodes","closeListener","openListener","stopPropagation","closeableListener","Motion","animateOut","animation","fadeOut","triggerHandler","$elem","addCloseListener","addToggleListener","toggleListener","addCloseableListener","addToggleFocusListener","toggleFocusListener","resizeListener","each","scrollListener","plugins","split","not","pluginId","pluginName","plugNames","push","error","console","listeners","yetiBoxes","map","name","join","debounceGlobalListener","Global","closeMeListener","addScrollListener","listeningElementsMutation","mutationRecordsList","$target","attributeName","pageYOffset","closest","attributes","characterData","attributeFilter","childList","subtree","document","addOpenListener","$document","addGlobalListeners","addMutationEventsListener","onLoad","triggersInitialized","c","getter","o","defineProperty","enumerable","get","toStringTag","t","mode","__esModule","ns","create","bind","object","property","hasOwnProperty","p","s","moduleId","l","modules"],"mappings":"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","file":"foundation.slider.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"./foundation.core\"), require(\"./foundation.util.keyboard\"), require(\"./foundation.util.motion\"), require(\"./foundation.util.touch\"), require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"./foundation.core\", \"./foundation.util.keyboard\", \"./foundation.util.motion\", \"./foundation.util.touch\", \"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"foundation.slider\"] = factory(require(\"./foundation.core\"), require(\"./foundation.util.keyboard\"), require(\"./foundation.util.motion\"), require(\"./foundation.util.touch\"), require(\"jquery\"));\n\telse\n\t\troot[\"__FOUNDATION_EXTERNAL__\"] = root[\"__FOUNDATION_EXTERNAL__\"] || {}, root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.slider\"] = factory(root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.core\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.keyboard\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.motion\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.touch\"], root[\"jQuery\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__foundation_core__, __WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__, __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__, __WEBPACK_EXTERNAL_MODULE__foundation_util_touch__, __WEBPACK_EXTERNAL_MODULE_jquery__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_touch__;","import { Foundation } from './foundation.core';\n\nimport { Slider } from '../../foundation.slider';\nFoundation.plugin(Slider, 'Slider');\n\nexport { Foundation, Slider };\n","'use strict';\n\nimport $ from 'jquery';\nimport { Keyboard } from './foundation.util.keyboard';\nimport { Move } from './foundation.util.motion';\nimport { GetYoDigits, rtl as Rtl } from './foundation.core.utils';\n\nimport { Plugin } from './foundation.core.plugin';\n\nimport { Touch } from './foundation.util.touch';\n\nimport { Triggers } from './foundation.util.triggers';\n/**\n * Slider module.\n * @module foundation.slider\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n * @requires foundation.util.keyboard\n * @requires foundation.util.touch\n */\n\nclass Slider extends Plugin {\n  /**\n   * Creates a new instance of a slider control.\n   * @class\n   * @name Slider\n   * @param {jQuery} element - jQuery object to make into a slider control.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n    this.className = 'Slider'; // ie9 back compat\n\n  // Touch and Triggers inits are idempotent, we just need to make sure it's initialied.\n    Touch.init($);\n    Triggers.init($);\n\n    this._init();\n\n    Keyboard.register('Slider', {\n      'ltr': {\n        'ARROW_RIGHT': 'increase',\n        'ARROW_UP': 'increase',\n        'ARROW_DOWN': 'decrease',\n        'ARROW_LEFT': 'decrease',\n        'SHIFT_ARROW_RIGHT': 'increase_fast',\n        'SHIFT_ARROW_UP': 'increase_fast',\n        'SHIFT_ARROW_DOWN': 'decrease_fast',\n        'SHIFT_ARROW_LEFT': 'decrease_fast',\n        'HOME': 'min',\n        'END': 'max'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'increase',\n        'ARROW_RIGHT': 'decrease',\n        'SHIFT_ARROW_LEFT': 'increase_fast',\n        'SHIFT_ARROW_RIGHT': 'decrease_fast'\n      }\n    });\n  }\n\n  /**\n   * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n   * @function\n   * @private\n   */\n  _init() {\n    this.inputs = this.$element.find('input');\n    this.handles = this.$element.find('[data-slider-handle]');\n\n    this.$handle = this.handles.eq(0);\n    this.$input = this.inputs.length ? this.inputs.eq(0) : $(`#${this.$handle.attr('aria-controls')}`);\n    this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n    var isDbl = false,\n        _this = this;\n    if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n      this.options.disabled = true;\n      this.$element.addClass(this.options.disabledClass);\n    }\n    if (!this.inputs.length) {\n      this.inputs = $().add(this.$input);\n      this.options.binding = true;\n    }\n\n    this._setInitAttr(0);\n\n    if (this.handles[1]) {\n      this.options.doubleSided = true;\n      this.$handle2 = this.handles.eq(1);\n      this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $(`#${this.$handle2.attr('aria-controls')}`);\n\n      if (!this.inputs[1]) {\n        this.inputs = this.inputs.add(this.$input2);\n      }\n      isDbl = true;\n\n      // this.$handle.triggerHandler('click.zf.slider');\n      this._setInitAttr(1);\n    }\n\n    // Set handle positions\n    this.setHandles();\n\n    this._events();\n  }\n\n  setHandles() {\n    if(this.handles[1]) {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true, () => {\n        this._setHandlePos(this.$handle2, this.inputs.eq(1).val(), true);\n      });\n    } else {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true);\n    }\n  }\n\n  _reflow() {\n    this.setHandles();\n  }\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)\n  */\n  _pctOfBar(value) {\n    var pctOfBar = percent(value - this.options.start, this.options.end - this.options.start)\n\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    }\n\n    return pctOfBar.toFixed(2)\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value\n  */\n  _value(pctOfBar) {\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    }\n    var value = (this.options.end - this.options.start) * pctOfBar + parseFloat(this.options.start);\n\n    return value\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function\n  */\n  _logTransform(value) {\n    return baseLog(this.options.nonLinearBase, ((value*(this.options.nonLinearBase-1))+1))\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function\n  */\n  _powTransform(value) {\n    return (Math.pow(this.options.nonLinearBase, value) - 1) / (this.options.nonLinearBase - 1)\n  }\n\n  /**\n   * Sets the position of the selected handle and fill bar.\n   * @function\n   * @private\n   * @param {jQuery} $hndl - the selected handle to move.\n   * @param {Number} location - floating point between the start and end values of the slider bar.\n   * @param {Function} cb - callback function to fire on completion.\n   * @fires Slider#moved\n   * @fires Slider#changed\n   */\n  _setHandlePos($hndl, location, noInvert, cb) {\n    // don't move if the slider has been disabled since its initialization\n    if (this.$element.hasClass(this.options.disabledClass)) {\n      return;\n    }\n    //might need to alter that slightly for bars that will have odd number selections.\n    location = parseFloat(location);//on input change events, convert string to number...grumble.\n\n    // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n    if (location < this.options.start) { location = this.options.start; }\n    else if (location > this.options.end) { location = this.options.end; }\n\n    var isDbl = this.options.doubleSided;\n\n    //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n    //for click and drag events, it's weird due to the scale(-1, 1) css property\n    if (this.options.vertical && !noInvert) {\n      location = this.options.end - location;\n    }\n\n    if (isDbl) { //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n      if (this.handles.index($hndl) === 0) {\n        var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n        location = location >= h2Val ? h2Val - this.options.step : location;\n      } else {\n        var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n        location = location <= h1Val ? h1Val + this.options.step : location;\n      }\n    }\n\n    var _this = this,\n        vert = this.options.vertical,\n        hOrW = vert ? 'height' : 'width',\n        lOrT = vert ? 'top' : 'left',\n        handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n        elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = this._pctOfBar(location),\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n    var css = {};\n\n    this._setValues($hndl, location);\n\n    // TODO update to calculate based on values set to respective inputs??\n    if (isDbl) {\n      var isLeftHndl = this.handles.index($hndl) === 0,\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n          //percentage w/h of the handle compared to the slider bar\n          handlePct =  ~~(percent(handleDim, elemDim) * 100);\n      //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n      if (isLeftHndl) {\n        //left or top percentage value to apply to the fill bar.\n        css[lOrT] = `${movement}%`;\n        //calculate the new min-height/width for the fill bar.\n        dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n        //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n        //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n        if (cb && typeof cb === 'function') { cb(); }//this is only needed for the initialization of 2 handled sliders\n      } else {\n        //just caching the value of the left/bottom handle's left/top property\n        var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n        //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n        //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n        dim = movement - (isNaN(handlePos) ? (this.options.initialStart - this.options.start)/((this.options.end-this.options.start)/100) : handlePos) + handlePct;\n      }\n      // assign the min-height/width to our css object\n      css[`min-${hOrW}`] = `${dim}%`;\n    }\n\n    this.$element.one('finished.zf.animate', function() {\n                    /**\n                     * Fires when the handle is done moving.\n                     * @event Slider#moved\n                     */\n                    _this.$element.trigger('moved.zf.slider', [$hndl]);\n                });\n\n    //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n    var moveTime = this.$element.data('dragging') ? 1000/60 : this.options.moveTime;\n\n    Move(moveTime, $hndl, function() {\n      // adjusting the left/top property of the handle, based on the percentage calculated above\n      // if movement isNaN, that is because the slider is hidden and we cannot determine handle width,\n      // fall back to next best guess.\n      if (isNaN(movement)) {\n        $hndl.css(lOrT, `${pctOfBar * 100}%`);\n      }\n      else {\n        $hndl.css(lOrT, `${movement}%`);\n      }\n\n      if (!_this.options.doubleSided) {\n        //if single-handled, a simple method to expand the fill bar\n        _this.$fill.css(hOrW, `${pctOfBar * 100}%`);\n      } else {\n        //otherwise, use the css object we created above\n        _this.$fill.css(css);\n      }\n    });\n\n\n    /**\n     * Fires when the value has not been change for a given time.\n     * @event Slider#changed\n     */\n    clearTimeout(_this.timeout);\n    _this.timeout = setTimeout(function(){\n      _this.$element.trigger('changed.zf.slider', [$hndl]);\n    }, _this.options.changedDelay);\n  }\n\n  /**\n   * Sets the initial attribute for the slider element.\n   * @function\n   * @private\n   * @param {Number} idx - index of the current handle/input to use.\n   */\n  _setInitAttr(idx) {\n    var initVal = (idx === 0 ? this.options.initialStart : this.options.initialEnd)\n    var id = this.inputs.eq(idx).attr('id') || GetYoDigits(6, 'slider');\n    this.inputs.eq(idx).attr({\n      'id': id,\n      'max': this.options.end,\n      'min': this.options.start,\n      'step': this.options.step\n    });\n    this.inputs.eq(idx).val(initVal);\n    this.handles.eq(idx).attr({\n      'role': 'slider',\n      'aria-controls': id,\n      'aria-valuemax': this.options.end,\n      'aria-valuemin': this.options.start,\n      'aria-valuenow': initVal,\n      'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n      'tabindex': 0\n    });\n  }\n\n  /**\n   * Sets the input and `aria-valuenow` values for the slider element.\n   * @function\n   * @private\n   * @param {jQuery} $handle - the currently selected handle.\n   * @param {Number} val - floating point of the new value.\n   */\n  _setValues($handle, val) {\n    var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n    this.inputs.eq(idx).val(val);\n    $handle.attr('aria-valuenow', val);\n  }\n\n  /**\n   * Handles events on the slider element.\n   * Calculates the new location of the current handle.\n   * If there are two handles and the bar was clicked, it determines which handle to move.\n   * @function\n   * @private\n   * @param {Object} e - the `event` object passed from the listener.\n   * @param {jQuery} $handle - the current handle to calculate for, if selected.\n   * @param {Number} val - floating point number for the new value of the slider.\n   * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n   */\n  _handleEvent(e, $handle, val) {\n    var value, hasVal;\n    if (!val) {//click or drag events\n      e.preventDefault();\n      var _this = this,\n          vertical = this.options.vertical,\n          param = vertical ? 'height' : 'width',\n          direction = vertical ? 'top' : 'left',\n          eventOffset = vertical ? e.pageY : e.pageX,\n          halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n          barDim = this.$element[0].getBoundingClientRect()[param],\n          windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n\n      var elemOffset = this.$element.offset()[direction];\n\n      // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n      // best way to guess this is simulated is if clientY == pageY\n      if (e.clientY === e.pageY) { eventOffset = eventOffset + windowScroll; }\n      var eventFromBar = eventOffset - elemOffset;\n      var barXY;\n      if (eventFromBar < 0) {\n        barXY = 0;\n      } else if (eventFromBar > barDim) {\n        barXY = barDim;\n      } else {\n        barXY = eventFromBar;\n      }\n      var offsetPct = percent(barXY, barDim);\n\n      value = this._value(offsetPct);\n\n      // turn everything around for RTL, yay math!\n      if (Rtl() && !this.options.vertical) {value = this.options.end - value;}\n\n      value = _this._adjustValue(null, value);\n      //boolean flag for the setHandlePos fn, specifically for vertical sliders\n      hasVal = false;\n\n      if (!$handle) {//figure out which handle it is, pass it to the next function.\n        var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n            secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n      }\n\n    } else {//change event on input\n      value = this._adjustValue(null, val);\n      hasVal = true;\n    }\n\n    this._setHandlePos($handle, value, hasVal);\n  }\n\n  /**\n   * Adjustes value for handle in regard to step value. returns adjusted value\n   * @function\n   * @private\n   * @param {jQuery} $handle - the selected handle.\n   * @param {Number} value - value to adjust. used if $handle is falsy\n   */\n  _adjustValue($handle, value) {\n    var val,\n      step = this.options.step,\n      div = parseFloat(step/2),\n      left, prev_val, next_val;\n    if (!!$handle) {\n      val = parseFloat($handle.attr('aria-valuenow'));\n    }\n    else {\n      val = value;\n    }\n    if (val >= 0) {\n      left = val % step;\n    } else {\n      left = step + (val % step);\n    }\n    prev_val = val - left;\n    next_val = prev_val + step;\n    if (left === 0) {\n      return val;\n    }\n    val = val >= prev_val + div ? next_val : prev_val;\n    return val;\n  }\n\n  /**\n   * Adds event listeners to the slider elements.\n   * @function\n   * @private\n   */\n  _events() {\n    this._eventsForHandle(this.$handle);\n    if(this.handles[1]) {\n      this._eventsForHandle(this.$handle2);\n    }\n  }\n\n\n  /**\n   * Adds event listeners a particular handle\n   * @function\n   * @private\n   * @param {jQuery} $handle - the current handle to apply listeners to.\n   */\n  _eventsForHandle($handle) {\n    var _this = this,\n        curHandle,\n        timer;\n\n      const handleChangeEvent = function(e) {\n        const idx = _this.inputs.index($(this));\n        _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n      };\n\n      // IE only triggers the change event when the input loses focus which strictly follows the HTML specification\n      // listen for the enter key and trigger a change\n      // @see https://html.spec.whatwg.org/multipage/input.html#common-input-element-events\n      this.inputs.off('keyup.zf.slider').on('keyup.zf.slider', function (e) {\n        if(e.keyCode == 13) handleChangeEvent.call(this, e);\n      });\n\n      this.inputs.off('change.zf.slider').on('change.zf.slider', handleChangeEvent);\n\n      if (this.options.clickSelect) {\n        this.$element.off('click.zf.slider').on('click.zf.slider', function(e) {\n          if (_this.$element.data('dragging')) { return false; }\n\n          if (!$(e.target).is('[data-slider-handle]')) {\n            if (_this.options.doubleSided) {\n              _this._handleEvent(e);\n            } else {\n              _this._handleEvent(e, _this.$handle);\n            }\n          }\n        });\n      }\n\n    if (this.options.draggable) {\n      this.handles.addTouch();\n\n      var $body = $('body');\n      $handle\n        .off('mousedown.zf.slider')\n        .on('mousedown.zf.slider', function(e) {\n          $handle.addClass('is-dragging');\n          _this.$fill.addClass('is-dragging');//\n          _this.$element.data('dragging', true);\n\n          curHandle = $(e.currentTarget);\n\n          $body.on('mousemove.zf.slider', function(e) {\n            e.preventDefault();\n            _this._handleEvent(e, curHandle);\n\n          }).on('mouseup.zf.slider', function(e) {\n            _this._handleEvent(e, curHandle);\n\n            $handle.removeClass('is-dragging');\n            _this.$fill.removeClass('is-dragging');\n            _this.$element.data('dragging', false);\n\n            $body.off('mousemove.zf.slider mouseup.zf.slider');\n          });\n      })\n      // prevent events triggered by touch\n      .on('selectstart.zf.slider touchmove.zf.slider', function(e) {\n        e.preventDefault();\n      });\n    }\n\n    $handle.off('keydown.zf.slider').on('keydown.zf.slider', function(e) {\n      var _$handle = $(this),\n          idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n          oldValue = parseFloat(_this.inputs.eq(idx).val()),\n          newValue;\n\n      // handle keyboard event with keyboard util\n      Keyboard.handleKey(e, 'Slider', {\n        decrease: function() {\n          newValue = oldValue - _this.options.step;\n        },\n        increase: function() {\n          newValue = oldValue + _this.options.step;\n        },\n        decrease_fast: function() {\n          newValue = oldValue - _this.options.step * 10;\n        },\n        increase_fast: function() {\n          newValue = oldValue + _this.options.step * 10;\n        },\n        min: function() {\n          newValue = _this.options.start;\n        },\n        max: function() {\n          newValue = _this.options.end;\n        },\n        handled: function() { // only set handle pos when event was handled specially\n          e.preventDefault();\n          _this._setHandlePos(_$handle, newValue, true);\n        }\n      });\n      /*if (newValue) { // if pressed key has special function, update value\n        e.preventDefault();\n        _this._setHandlePos(_$handle, newValue);\n      }*/\n    });\n  }\n\n  /**\n   * Destroys the slider plugin.\n   */\n  _destroy() {\n    this.handles.off('.zf.slider');\n    this.inputs.off('.zf.slider');\n    this.$element.off('.zf.slider');\n\n    clearTimeout(this.timeout);\n  }\n}\n\nSlider.defaults = {\n  /**\n   * Minimum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  start: 0,\n  /**\n   * Maximum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 100\n   */\n  end: 100,\n  /**\n   * Minimum value change per change event.\n   * @option\n   * @type {number}\n   * @default 1\n   */\n  step: 1,\n  /**\n   * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  initialStart: 0,\n  /**\n   * Value at which the right handle/second input should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 100\n   */\n  initialEnd: 100,\n  /**\n   * Allows the input to be located outside the container and visible. Set to by the JS\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  binding: false,\n  /**\n   * Allows the user to click/tap on the slider bar to select a value.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  clickSelect: true,\n  /**\n   * Set to true and use the `vertical` class to change alignment to vertical.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  vertical: false,\n  /**\n   * Allows the user to drag the slider handle(s) to select a value.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  draggable: true,\n  /**\n   * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  disabled: false,\n  /**\n   * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  doubleSided: false,\n  /**\n   * Potential future feature.\n   */\n  // steps: 100,\n  /**\n   * Number of decimal places the plugin should go to for floating point precision.\n   * @option\n   * @type {number}\n   * @default 2\n   */\n  decimal: 2,\n  /**\n   * Time delay for dragged elements.\n   */\n  // dragDelay: 0,\n  /**\n   * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n   * @option\n   * @type {number}\n   * @default 200\n   */\n  moveTime: 200,//update this if changing the transition time in the sass\n  /**\n   * Class applied to disabled sliders.\n   * @option\n   * @type {string}\n   * @default 'disabled'\n   */\n  disabledClass: 'disabled',\n  /**\n   * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  invertVertical: false,\n  /**\n   * Milliseconds before the `changed.zf-slider` event is triggered after value change.\n   * @option\n   * @type {number}\n   * @default 500\n   */\n  changedDelay: 500,\n  /**\n  * Basevalue for non-linear sliders\n  * @option\n  * @type {number}\n  * @default 5\n  */\n  nonLinearBase: 5,\n  /**\n  * Basevalue for non-linear sliders, possible values are: `'linear'`, `'pow'` & `'log'`. Pow and Log use the nonLinearBase setting.\n  * @option\n  * @type {string}\n  * @default 'linear'\n  */\n  positionValueFunction: 'linear',\n};\n\nfunction percent(frac, num) {\n  return (frac / num);\n}\nfunction absPosition($handle, dir, clickPos, param) {\n  return Math.abs(($handle.position()[dir] + ($handle[param]() / 2)) - clickPos);\n}\nfunction baseLog(base, value) {\n  return Math.log(value)/Math.log(base)\n}\n\nexport {Slider};\n","'use strict';\n\nimport $ from 'jquery';\nimport { onLoad } from './foundation.core.utils';\nimport { Motion } from './foundation.util.motion';\n\nconst MutationObserver = (function () {\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  for (var i=0; i < prefixes.length; i++) {\n    if (`${prefixes[i]}MutationObserver` in window) {\n      return window[`${prefixes[i]}MutationObserver`];\n    }\n  }\n  return false;\n}());\n\nconst triggers = (el, type) => {\n  el.data(type).split(' ').forEach(id => {\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\n  });\n};\n\nvar Triggers = {\n  Listeners: {\n    Basic: {},\n    Global: {}\n  },\n  Initializers: {}\n}\n\nTriggers.Listeners.Basic  = {\n  openListener: function() {\n    triggers($(this), 'open');\n  },\n  closeListener: function() {\n    let id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    }\n    else {\n      $(this).trigger('close.zf.trigger');\n    }\n  },\n  toggleListener: function() {\n    let id = $(this).data('toggle');\n    if (id) {\n      triggers($(this), 'toggle');\n    } else {\n      $(this).trigger('toggle.zf.trigger');\n    }\n  },\n  closeableListener: function(e) {\n    e.stopPropagation();\n    let animation = $(this).data('closable');\n\n    if(animation !== ''){\n      Motion.animateOut($(this), animation, function() {\n        $(this).trigger('closed.zf');\n      });\n    }else{\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  },\n  toggleFocusListener: function() {\n    let id = $(this).data('toggle-focus');\n    $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\n  }\n};\n\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\nTriggers.Initializers.addOpenListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.openListener);\n  $elem.on('click.zf.trigger', '[data-open]', Triggers.Listeners.Basic.openListener);\n}\n\n// Elements with [data-close] will close a plugin that supports it when clicked.\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\nTriggers.Initializers.addCloseListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.closeListener);\n  $elem.on('click.zf.trigger', '[data-close]', Triggers.Listeners.Basic.closeListener);\n}\n\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\nTriggers.Initializers.addToggleListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.toggleListener);\n  $elem.on('click.zf.trigger', '[data-toggle]', Triggers.Listeners.Basic.toggleListener);\n}\n\n// Elements with [data-closable] will respond to close.zf.trigger events.\nTriggers.Initializers.addCloseableListener = ($elem) => {\n  $elem.off('close.zf.trigger', Triggers.Listeners.Basic.closeableListener);\n  $elem.on('close.zf.trigger', '[data-closeable], [data-closable]', Triggers.Listeners.Basic.closeableListener);\n}\n\n// Elements with [data-toggle-focus] will respond to coming in and out of focus\nTriggers.Initializers.addToggleFocusListener = ($elem) => {\n  $elem.off('focus.zf.trigger blur.zf.trigger', Triggers.Listeners.Basic.toggleFocusListener);\n  $elem.on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', Triggers.Listeners.Basic.toggleFocusListener);\n}\n\n\n\n// More Global/complex listeners and triggers\nTriggers.Listeners.Global  = {\n  resizeListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('resizeme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a resize event\n    $nodes.attr('data-events', \"resize\");\n  },\n  scrollListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('scrollme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a scroll event\n    $nodes.attr('data-events', \"scroll\");\n  },\n  closeMeListener: function(e, pluginId){\n    let plugin = e.namespace.split('.')[0];\n    let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\n\n    plugins.each(function(){\n      let _this = $(this);\n      _this.triggerHandler('close.zf.trigger', [_this]);\n    });\n  }\n}\n\n// Global, parses whole document.\nTriggers.Initializers.addClosemeListener = function(pluginName) {\n  var yetiBoxes = $('[data-yeti-box]'),\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n  if(pluginName){\n    if(typeof pluginName === 'string'){\n      plugNames.push(pluginName);\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\n      plugNames = plugNames.concat(pluginName);\n    }else{\n      console.error('Plugin names must be strings');\n    }\n  }\n  if(yetiBoxes.length){\n    let listeners = plugNames.map((name) => {\n      return `closeme.zf.${name}`;\n    }).join(' ');\n\n    $(window).off(listeners).on(listeners, Triggers.Listeners.Global.closeMeListener);\n  }\n}\n\nfunction debounceGlobalListener(debounce, trigger, listener) {\n  let timer, args = Array.prototype.slice.call(arguments, 3);\n  $(window).off(trigger).on(trigger, function(e) {\n    if (timer) { clearTimeout(timer); }\n    timer = setTimeout(function(){\n      listener.apply(null, args);\n    }, debounce || 10);//default time to emit scroll event\n  });\n}\n\nTriggers.Initializers.addResizeListener = function(debounce){\n  let $nodes = $('[data-resize]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'resize.zf.trigger', Triggers.Listeners.Global.resizeListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addScrollListener = function(debounce){\n  let $nodes = $('[data-scroll]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'scroll.zf.trigger', Triggers.Listeners.Global.scrollListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addMutationEventsListener = function($elem) {\n  if(!MutationObserver){ return false; }\n  let $nodes = $elem.find('[data-resize], [data-scroll], [data-mutate]');\n\n  //element callback\n  var listeningElementsMutation = function (mutationRecordsList) {\n    var $target = $(mutationRecordsList[0].target);\n\n    //trigger the event handler for the element depending on type\n    switch (mutationRecordsList[0].type) {\n      case \"attributes\":\n        if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n        }\n        if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n         }\n        if (mutationRecordsList[0].attributeName === \"style\") {\n          $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n          $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        }\n        break;\n\n      case \"childList\":\n        $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n        $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        break;\n\n      default:\n        return false;\n      //nothing\n    }\n  };\n\n  if ($nodes.length) {\n    //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\n    for (var i = 0; i <= $nodes.length - 1; i++) {\n      var elementObserver = new MutationObserver(listeningElementsMutation);\n      elementObserver.observe($nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\n    }\n  }\n}\n\nTriggers.Initializers.addSimpleListeners = function() {\n  let $document = $(document);\n\n  Triggers.Initializers.addOpenListener($document);\n  Triggers.Initializers.addCloseListener($document);\n  Triggers.Initializers.addToggleListener($document);\n  Triggers.Initializers.addCloseableListener($document);\n  Triggers.Initializers.addToggleFocusListener($document);\n\n}\n\nTriggers.Initializers.addGlobalListeners = function() {\n  let $document = $(document);\n  Triggers.Initializers.addMutationEventsListener($document);\n  Triggers.Initializers.addResizeListener();\n  Triggers.Initializers.addScrollListener();\n  Triggers.Initializers.addClosemeListener();\n}\n\n\nTriggers.init = function ($, Foundation) {\n  onLoad($(window), function () {\n    if ($.triggersInitialized !== true) {\n      Triggers.Initializers.addSimpleListeners();\n      Triggers.Initializers.addGlobalListeners();\n      $.triggersInitialized = true;\n    }\n  });\n\n  if(Foundation) {\n    Foundation.Triggers = Triggers;\n    // Legacy included to be backwards compatible for now.\n    Foundation.IHearYou = Triggers.Initializers.addGlobalListeners\n  }\n}\n\nexport {Triggers};\n"]}